declare object TDivisor;

object TDivisor {

	property COEFFICIENTS : Vector<Rational>;

	property PRINCIPAL : Bool;
	
	property CARTIER : Bool;
	
	property Q_CARTIER : Bool;
	
	property AMPLE : Bool;
	
	property SEMIAMPLE : Bool;
	
	property INTEGRAL : Bool;

	property SECTION_POLYTOPE : Polytope<Rational>;


	rule INTEGRAL : COEFFICIENTS {		
		$this->INTEGRAL = (eliminate_denominators($this->COEFFICIENTS) - $this->COEFFICIENTS == zero_vector($this->COEFFICIENTS->dim));
	}




}


object ToricVariety {

	property DIVISOR : TDivisor : multiple;

	
	rule DIVISOR.PRINCIPAL : RAYS, DIVISOR.COEFFICIENTS {
		my $c = $this->DIVISOR->COEFFICIENTS;
		my $eq = -$c | $this->RAYS;
		my $bla = new Polytope<Rational>(EQUATIONS => $eq);
		$bla->VERTICES;
		my $sol = grep($_->[0]==1, @{$bla->LATTICE_POINTS});
		$this->DIVISOR->PRINCIPAL=($sol > 0);
	}

	rule DIVISOR.SECTION_POLYTOPE : RAYS, DIVISOR.COEFFICIENTS {
		my $a = $this->DIVISOR->COEFFICIENTS;
		my $v = $this->RAYS;		
		my $ineq = $a | $v;
		$this->DIVISOR->SECTION_POLYTOPE = new Polytope<Rational>(INEQUALITIES => $ineq);
	}


}
