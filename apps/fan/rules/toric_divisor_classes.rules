#  Copyright (c) 2012
#  by authors as mentioned on:
#  https://github.com/lkastner/polymake_toric/wiki/Authors
#  
#  Project home:
#  https://github.com/lkastner/polymake_toric
#
#  For licensing we cite the original Polymake code:
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 2, or (at your option) any
#  later version: http://www.gnu.org/licenses/gpl.txt.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.



# FIXME 
#   here we need a configure block that checks 
#     - whether the ntl extension is installed
#     - can read the ntl path and appropriate includes from it
#   (see ticket #504)
# 
#     - the current version uses CallPolymakeFunction to access integer_kernel
#        and fails with an error if this is not found
# CONFIGURE { }


object ToricVariety {

# the methods for the following three rules are implemented in the file class_group.cc
rule RATIONAL_DIVISOR_CLASS_GROUP.PROJECTION, RATIONAL_DIVISOR_CLASS_GROUP.LIFTING : RAYS {
    my $class_group_data = rational_divisor_class_group($this);
    $this->RATIONAL_DIVISOR_CLASS_GROUP->PROJECTION = $class_group_data->first;
    $this->RATIONAL_DIVISOR_CLASS_GROUP->LIFTING = $class_group_data->second;
}
precondition : COMPLETE;

  rule EFFECTIVE_CONE.INEQUALITIES : RAYS, RATIONAL_DIVISOR_CLASS_GROUP.PROJECTION {
    $this->EFFECTIVE_CONE = effective_cone($this);
  }
  precondition : COMPLETE;


  rule NEF_CONE.FACETS, NEF_CONE.LINEAR_SPAN : RAYS, MAXIMAL_CONES {
    $this->NEF_CONE = nef_cone($this);
  }
  precondition : COMPLETE; 


  # dualize a cone
  rule MORI_CONE.RAYS, MORI_CONE.LINEALITY_SPACE : NEF_CONE.FACETS, NEF_CONE.LINEAR_SPAN {
    $this->MORI_CONE->RAYS = $this->NEF_CONE->FACETS;
    $this->MORI_CONE->LINEALITY_SPACE =  $this->NEF_CONE->LINEAR_SPAN;
  }
  precondition : COMPLETE; 

}
